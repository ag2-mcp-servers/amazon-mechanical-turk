# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T12:46:31+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, RootModel, conint, constr


class AcceptQualificationRequestResponse(BaseModel):
    pass


class ApproveAssignmentResponse(BaseModel):
    pass


class AssignmentStatus(Enum):
    Submitted = 'Submitted'
    Approved = 'Approved'
    Rejected = 'Rejected'


class AssignmentStatusList(RootModel[List[AssignmentStatus]]):
    root: List[AssignmentStatus]


class AssociateQualificationWithWorkerResponse(BaseModel):
    pass


class Boolean(RootModel[bool]):
    root: bool


class Comparator(Enum):
    LessThan = 'LessThan'
    LessThanOrEqualTo = 'LessThanOrEqualTo'
    GreaterThan = 'GreaterThan'
    GreaterThanOrEqualTo = 'GreaterThanOrEqualTo'
    EqualTo = 'EqualTo'
    NotEqualTo = 'NotEqualTo'
    Exists = 'Exists'
    DoesNotExist = 'DoesNotExist'
    In = 'In'
    NotIn = 'NotIn'


class CountryParameters(RootModel[constr(min_length=2, max_length=2)]):
    root: constr(min_length=2, max_length=2)


class CreateAdditionalAssignmentsForHITResponse(BaseModel):
    pass


class CreateWorkerBlockResponse(BaseModel):
    pass


class CurrencyAmount(RootModel[constr(pattern=r'^[0-9]+(\.)?[0-9]{0,2}$')]):
    root: constr(pattern=r'^[0-9]+(\.)?[0-9]{0,2}$') = Field(
        ..., description='A string representing a currency amount.'
    )


class CustomerId(
    RootModel[constr(pattern=r'^A[A-Z0-9]+$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^A[A-Z0-9]+$', min_length=1, max_length=64)


class CustomerIdList(RootModel[List[CustomerId]]):
    root: List[CustomerId]


class DeleteHITResponse(BaseModel):
    pass


class DeleteQualificationTypeResponse(BaseModel):
    pass


class DeleteWorkerBlockResponse(BaseModel):
    pass


class DisassociateQualificationFromWorkerResponse(BaseModel):
    pass


class EntityId(RootModel[constr(pattern=r'^[A-Z0-9]+$', min_length=1, max_length=64)]):
    root: constr(pattern=r'^[A-Z0-9]+$', min_length=1, max_length=64)


class EventType(Enum):
    AssignmentAccepted = 'AssignmentAccepted'
    AssignmentAbandoned = 'AssignmentAbandoned'
    AssignmentReturned = 'AssignmentReturned'
    AssignmentSubmitted = 'AssignmentSubmitted'
    AssignmentRejected = 'AssignmentRejected'
    AssignmentApproved = 'AssignmentApproved'
    HITCreated = 'HITCreated'
    HITExpired = 'HITExpired'
    HITReviewable = 'HITReviewable'
    HITExtended = 'HITExtended'
    HITDisposed = 'HITDisposed'
    Ping = 'Ping'


class EventTypeList(RootModel[List[EventType]]):
    root: List[EventType]


class GetAccountBalanceRequest(BaseModel):
    pass


class GetAccountBalanceResponse(BaseModel):
    AvailableBalance: Optional[CurrencyAmount] = None
    OnHoldBalance: Optional[CurrencyAmount] = None


class GetAssignmentRequest(BaseModel):
    AssignmentId: EntityId


class GetHITRequest(BaseModel):
    HITId: EntityId


class GetQualificationScoreRequest(BaseModel):
    QualificationTypeId: EntityId
    WorkerId: CustomerId


class GetQualificationTypeRequest(BaseModel):
    QualificationTypeId: EntityId


class HITAccessActions(Enum):
    Accept = 'Accept'
    PreviewAndAccept = 'PreviewAndAccept'
    DiscoverPreviewAndAccept = 'DiscoverPreviewAndAccept'


class HITReviewStatus(Enum):
    NotReviewed = 'NotReviewed'
    MarkedForReview = 'MarkedForReview'
    ReviewedAppropriate = 'ReviewedAppropriate'
    ReviewedInappropriate = 'ReviewedInappropriate'


class HITStatus(Enum):
    Assignable = 'Assignable'
    Unassignable = 'Unassignable'
    Reviewable = 'Reviewable'
    Reviewing = 'Reviewing'
    Disposed = 'Disposed'


class IdempotencyToken(RootModel[constr(min_length=1, max_length=64)]):
    root: constr(min_length=1, max_length=64)


class Integer(RootModel[int]):
    root: int


class IntegerList(RootModel[List[Integer]]):
    root: List[Integer]


class Locale(BaseModel):
    Country: CountryParameters
    Subdivision: Optional[CountryParameters] = None


class LocaleList(RootModel[List[Locale]]):
    root: List[Locale]


class Long(RootModel[int]):
    root: int


class NotificationTransport(Enum):
    Email = 'Email'
    SQS = 'SQS'
    SNS = 'SNS'


class NotifyWorkersFailureCode(Enum):
    SoftFailure = 'SoftFailure'
    HardFailure = 'HardFailure'


class PaginationToken(RootModel[constr(min_length=1, max_length=255)]):
    root: constr(min_length=1, max_length=255) = Field(
        ...,
        description='If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. ',
    )


class QualificationStatus(Enum):
    Granted = 'Granted'
    Revoked = 'Revoked'


class QualificationTypeStatus(Enum):
    Active = 'Active'
    Inactive = 'Inactive'


class RejectAssignmentResponse(BaseModel):
    pass


class RejectQualificationRequestResponse(BaseModel):
    pass


class RequestError(RootModel[Any]):
    root: Any


class ResultSize(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class ReviewActionStatus(Enum):
    Intended = 'Intended'
    Succeeded = 'Succeeded'
    Failed = 'Failed'
    Cancelled = 'Cancelled'


class ReviewPolicyLevel(Enum):
    Assignment = 'Assignment'
    HIT = 'HIT'


class ReviewPolicyLevelList(RootModel[List[ReviewPolicyLevel]]):
    root: List[ReviewPolicyLevel]


class ReviewableHITStatus(Enum):
    Reviewable = 'Reviewable'
    Reviewing = 'Reviewing'


class SendBonusResponse(BaseModel):
    pass


class SendTestEventNotificationResponse(BaseModel):
    pass


class ServiceFault(RootModel[Any]):
    root: Any


class String(RootModel[str]):
    root: str


class StringList(RootModel[List[String]]):
    root: List[String]


class Timestamp(RootModel[datetime]):
    root: datetime


class UpdateExpirationForHITRequest(BaseModel):
    ExpireAt: Timestamp
    HITId: EntityId


class UpdateExpirationForHITResponse(BaseModel):
    pass


class UpdateHITReviewStatusRequest(BaseModel):
    HITId: EntityId
    Revert: Optional[Boolean] = None


class UpdateHITReviewStatusResponse(BaseModel):
    pass


class UpdateHITTypeOfHITRequest(BaseModel):
    HITId: EntityId
    HITTypeId: EntityId


class UpdateHITTypeOfHITResponse(BaseModel):
    pass


class UpdateNotificationSettingsResponse(BaseModel):
    pass


class UpdateQualificationTypeRequest(BaseModel):
    AnswerKey: Optional[String] = None
    AutoGranted: Optional[Boolean] = None
    AutoGrantedValue: Optional[Integer] = None
    Description: Optional[String] = None
    QualificationTypeId: EntityId
    QualificationTypeStatus_1: Optional[QualificationTypeStatus] = Field(
        None, alias='QualificationTypeStatus'
    )
    RetryDelayInSeconds: Optional[Long] = None
    Test: Optional[String] = None
    TestDurationInSeconds: Optional[Long] = None


class WorkerBlock(BaseModel):
    Reason: Optional[String] = None
    WorkerId: Optional[CustomerId] = None


class WorkerBlockList(RootModel[List[WorkerBlock]]):
    root: List[WorkerBlock]


class XAmzTarget(Enum):
    MTurkRequesterServiceV20170117_AcceptQualificationRequest = (
        'MTurkRequesterServiceV20170117.AcceptQualificationRequest'
    )


class XAmzTarget1(Enum):
    MTurkRequesterServiceV20170117_ApproveAssignment = (
        'MTurkRequesterServiceV20170117.ApproveAssignment'
    )


class XAmzTarget2(Enum):
    MTurkRequesterServiceV20170117_AssociateQualificationWithWorker = (
        'MTurkRequesterServiceV20170117.AssociateQualificationWithWorker'
    )


class XAmzTarget3(Enum):
    MTurkRequesterServiceV20170117_CreateAdditionalAssignmentsForHIT = (
        'MTurkRequesterServiceV20170117.CreateAdditionalAssignmentsForHIT'
    )


class XAmzTarget4(Enum):
    MTurkRequesterServiceV20170117_CreateHIT = (
        'MTurkRequesterServiceV20170117.CreateHIT'
    )


class XAmzTarget5(Enum):
    MTurkRequesterServiceV20170117_CreateHITType = (
        'MTurkRequesterServiceV20170117.CreateHITType'
    )


class XAmzTarget6(Enum):
    MTurkRequesterServiceV20170117_CreateHITWithHITType = (
        'MTurkRequesterServiceV20170117.CreateHITWithHITType'
    )


class XAmzTarget7(Enum):
    MTurkRequesterServiceV20170117_CreateQualificationType = (
        'MTurkRequesterServiceV20170117.CreateQualificationType'
    )


class XAmzTarget8(Enum):
    MTurkRequesterServiceV20170117_CreateWorkerBlock = (
        'MTurkRequesterServiceV20170117.CreateWorkerBlock'
    )


class XAmzTarget9(Enum):
    MTurkRequesterServiceV20170117_DeleteHIT = (
        'MTurkRequesterServiceV20170117.DeleteHIT'
    )


class XAmzTarget10(Enum):
    MTurkRequesterServiceV20170117_DeleteQualificationType = (
        'MTurkRequesterServiceV20170117.DeleteQualificationType'
    )


class XAmzTarget11(Enum):
    MTurkRequesterServiceV20170117_DeleteWorkerBlock = (
        'MTurkRequesterServiceV20170117.DeleteWorkerBlock'
    )


class XAmzTarget12(Enum):
    MTurkRequesterServiceV20170117_DisassociateQualificationFromWorker = (
        'MTurkRequesterServiceV20170117.DisassociateQualificationFromWorker'
    )


class XAmzTarget13(Enum):
    MTurkRequesterServiceV20170117_GetAccountBalance = (
        'MTurkRequesterServiceV20170117.GetAccountBalance'
    )


class XAmzTarget14(Enum):
    MTurkRequesterServiceV20170117_GetAssignment = (
        'MTurkRequesterServiceV20170117.GetAssignment'
    )


class XAmzTarget15(Enum):
    MTurkRequesterServiceV20170117_GetFileUploadURL = (
        'MTurkRequesterServiceV20170117.GetFileUploadURL'
    )


class XAmzTarget16(Enum):
    MTurkRequesterServiceV20170117_GetHIT = 'MTurkRequesterServiceV20170117.GetHIT'


class XAmzTarget17(Enum):
    MTurkRequesterServiceV20170117_GetQualificationScore = (
        'MTurkRequesterServiceV20170117.GetQualificationScore'
    )


class XAmzTarget18(Enum):
    MTurkRequesterServiceV20170117_GetQualificationType = (
        'MTurkRequesterServiceV20170117.GetQualificationType'
    )


class XAmzTarget19(Enum):
    MTurkRequesterServiceV20170117_ListAssignmentsForHIT = (
        'MTurkRequesterServiceV20170117.ListAssignmentsForHIT'
    )


class XAmzTarget20(Enum):
    MTurkRequesterServiceV20170117_ListBonusPayments = (
        'MTurkRequesterServiceV20170117.ListBonusPayments'
    )


class XAmzTarget21(Enum):
    MTurkRequesterServiceV20170117_ListHITs = 'MTurkRequesterServiceV20170117.ListHITs'


class XAmzTarget22(Enum):
    MTurkRequesterServiceV20170117_ListHITsForQualificationType = (
        'MTurkRequesterServiceV20170117.ListHITsForQualificationType'
    )


class XAmzTarget23(Enum):
    MTurkRequesterServiceV20170117_ListQualificationRequests = (
        'MTurkRequesterServiceV20170117.ListQualificationRequests'
    )


class XAmzTarget24(Enum):
    MTurkRequesterServiceV20170117_ListQualificationTypes = (
        'MTurkRequesterServiceV20170117.ListQualificationTypes'
    )


class XAmzTarget25(Enum):
    MTurkRequesterServiceV20170117_ListReviewPolicyResultsForHIT = (
        'MTurkRequesterServiceV20170117.ListReviewPolicyResultsForHIT'
    )


class XAmzTarget26(Enum):
    MTurkRequesterServiceV20170117_ListReviewableHITs = (
        'MTurkRequesterServiceV20170117.ListReviewableHITs'
    )


class XAmzTarget27(Enum):
    MTurkRequesterServiceV20170117_ListWorkerBlocks = (
        'MTurkRequesterServiceV20170117.ListWorkerBlocks'
    )


class XAmzTarget28(Enum):
    MTurkRequesterServiceV20170117_ListWorkersWithQualificationType = (
        'MTurkRequesterServiceV20170117.ListWorkersWithQualificationType'
    )


class XAmzTarget29(Enum):
    MTurkRequesterServiceV20170117_NotifyWorkers = (
        'MTurkRequesterServiceV20170117.NotifyWorkers'
    )


class XAmzTarget30(Enum):
    MTurkRequesterServiceV20170117_RejectAssignment = (
        'MTurkRequesterServiceV20170117.RejectAssignment'
    )


class XAmzTarget31(Enum):
    MTurkRequesterServiceV20170117_RejectQualificationRequest = (
        'MTurkRequesterServiceV20170117.RejectQualificationRequest'
    )


class XAmzTarget32(Enum):
    MTurkRequesterServiceV20170117_SendBonus = (
        'MTurkRequesterServiceV20170117.SendBonus'
    )


class XAmzTarget33(Enum):
    MTurkRequesterServiceV20170117_SendTestEventNotification = (
        'MTurkRequesterServiceV20170117.SendTestEventNotification'
    )


class XAmzTarget34(Enum):
    MTurkRequesterServiceV20170117_UpdateExpirationForHIT = (
        'MTurkRequesterServiceV20170117.UpdateExpirationForHIT'
    )


class XAmzTarget35(Enum):
    MTurkRequesterServiceV20170117_UpdateHITReviewStatus = (
        'MTurkRequesterServiceV20170117.UpdateHITReviewStatus'
    )


class XAmzTarget36(Enum):
    MTurkRequesterServiceV20170117_UpdateHITTypeOfHIT = (
        'MTurkRequesterServiceV20170117.UpdateHITTypeOfHIT'
    )


class XAmzTarget37(Enum):
    MTurkRequesterServiceV20170117_UpdateNotificationSettings = (
        'MTurkRequesterServiceV20170117.UpdateNotificationSettings'
    )


class XAmzTarget38(Enum):
    MTurkRequesterServiceV20170117_UpdateQualificationType = (
        'MTurkRequesterServiceV20170117.UpdateQualificationType'
    )


class AcceptQualificationRequestRequest(BaseModel):
    IntegerValue: Optional[Integer] = None
    QualificationRequestId: String


class ApproveAssignmentRequest(BaseModel):
    AssignmentId: EntityId
    OverrideRejection: Optional[Boolean] = None
    RequesterFeedback: Optional[String] = None


class Assignment(BaseModel):
    AcceptTime: Optional[Timestamp] = None
    Answer: Optional[String] = None
    ApprovalTime: Optional[Timestamp] = None
    AssignmentId: Optional[EntityId] = None
    AssignmentStatus_1: Optional[AssignmentStatus] = Field(
        None, alias='AssignmentStatus'
    )
    AutoApprovalTime: Optional[Timestamp] = None
    Deadline: Optional[Timestamp] = None
    HITId: Optional[EntityId] = None
    RejectionTime: Optional[Timestamp] = None
    RequesterFeedback: Optional[String] = None
    SubmitTime: Optional[Timestamp] = None
    WorkerId: Optional[CustomerId] = None


class AssignmentList(RootModel[List[Assignment]]):
    root: List[Assignment]


class AssociateQualificationWithWorkerRequest(BaseModel):
    IntegerValue: Optional[Integer] = None
    QualificationTypeId: EntityId
    SendNotification: Optional[Boolean] = None
    WorkerId: CustomerId


class BonusPayment(BaseModel):
    AssignmentId: Optional[EntityId] = None
    BonusAmount: Optional[CurrencyAmount] = None
    GrantTime: Optional[Timestamp] = None
    Reason: Optional[String] = None
    WorkerId: Optional[CustomerId] = None


class BonusPaymentList(RootModel[List[BonusPayment]]):
    root: List[BonusPayment]


class CreateAdditionalAssignmentsForHITRequest(BaseModel):
    HITId: EntityId
    NumberOfAdditionalAssignments: Integer
    UniqueRequestToken: Optional[IdempotencyToken] = None


class CreateHITTypeResponse(BaseModel):
    HITTypeId: Optional[EntityId] = None


class CreateQualificationTypeRequest(BaseModel):
    AnswerKey: Optional[String] = None
    AutoGranted: Optional[Boolean] = None
    AutoGrantedValue: Optional[Integer] = None
    Description: String
    Keywords: Optional[String] = None
    Name: String
    QualificationTypeStatus_1: QualificationTypeStatus = Field(
        ..., alias='QualificationTypeStatus'
    )
    RetryDelayInSeconds: Optional[Long] = None
    Test: Optional[String] = None
    TestDurationInSeconds: Optional[Long] = None


class CreateWorkerBlockRequest(BaseModel):
    Reason: String
    WorkerId: CustomerId


class DeleteHITRequest(BaseModel):
    HITId: EntityId


class DeleteQualificationTypeRequest(BaseModel):
    QualificationTypeId: EntityId


class DeleteWorkerBlockRequest(BaseModel):
    Reason: Optional[String] = None
    WorkerId: CustomerId


class DisassociateQualificationFromWorkerRequest(BaseModel):
    QualificationTypeId: EntityId
    Reason: Optional[String] = None
    WorkerId: CustomerId


class GetFileUploadURLRequest(BaseModel):
    AssignmentId: EntityId
    QuestionIdentifier: String


class GetFileUploadURLResponse(BaseModel):
    FileUploadURL: Optional[String] = None


class HITLayoutParameter(BaseModel):
    Name: String
    Value: String


class HITLayoutParameterList(RootModel[List[HITLayoutParameter]]):
    root: List[HITLayoutParameter]


class ListAssignmentsForHITRequest(BaseModel):
    AssignmentStatuses: Optional[AssignmentStatusList] = None
    HITId: EntityId
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None


class ListAssignmentsForHITResponse(BaseModel):
    Assignments: Optional[AssignmentList] = None
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None


class ListBonusPaymentsRequest(BaseModel):
    AssignmentId: Optional[EntityId] = None
    HITId: Optional[EntityId] = None
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None


class ListBonusPaymentsResponse(BaseModel):
    BonusPayments: Optional[BonusPaymentList] = None
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None


class ListHITsForQualificationTypeRequest(BaseModel):
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None
    QualificationTypeId: EntityId


class ListHITsRequest(BaseModel):
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None


class ListQualificationRequestsRequest(BaseModel):
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None
    QualificationTypeId: Optional[EntityId] = None


class ListQualificationTypesRequest(BaseModel):
    MaxResults: Optional[ResultSize] = None
    MustBeOwnedByCaller: Optional[Boolean] = None
    MustBeRequestable: Boolean
    NextToken: Optional[PaginationToken] = None
    Query: Optional[String] = None


class ListReviewPolicyResultsForHITRequest(BaseModel):
    HITId: EntityId
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None
    PolicyLevels: Optional[ReviewPolicyLevelList] = None
    RetrieveActions: Optional[Boolean] = None
    RetrieveResults: Optional[Boolean] = None


class ListReviewableHITsRequest(BaseModel):
    HITTypeId: Optional[EntityId] = None
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None
    Status: Optional[ReviewableHITStatus] = None


class ListWorkerBlocksRequest(BaseModel):
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None


class ListWorkerBlocksResponse(BaseModel):
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None
    WorkerBlocks: Optional[WorkerBlockList] = None


class ListWorkersWithQualificationTypeRequest(BaseModel):
    MaxResults: Optional[ResultSize] = None
    NextToken: Optional[PaginationToken] = None
    QualificationTypeId: EntityId
    Status: Optional[QualificationStatus] = None


class NotificationSpecification(BaseModel):
    Destination: String
    EventTypes: EventTypeList
    Transport: NotificationTransport
    Version: String


class NotifyWorkersFailureStatus(BaseModel):
    NotifyWorkersFailureCode_1: Optional[NotifyWorkersFailureCode] = Field(
        None, alias='NotifyWorkersFailureCode'
    )
    NotifyWorkersFailureMessage: Optional[String] = None
    WorkerId: Optional[CustomerId] = None


class NotifyWorkersFailureStatusList(RootModel[List[NotifyWorkersFailureStatus]]):
    root: List[NotifyWorkersFailureStatus]


class NotifyWorkersRequest(BaseModel):
    MessageText: String
    Subject: String
    WorkerIds: CustomerIdList


class NotifyWorkersResponse(BaseModel):
    NotifyWorkersFailureStatuses: Optional[NotifyWorkersFailureStatusList] = None


class ParameterMapEntry(BaseModel):
    Key: Optional[String] = None
    Values: Optional[StringList] = None


class ParameterMapEntryList(RootModel[List[ParameterMapEntry]]):
    root: List[ParameterMapEntry]


class PolicyParameter(BaseModel):
    Key: Optional[String] = None
    MapEntries: Optional[ParameterMapEntryList] = None
    Values: Optional[StringList] = None


class PolicyParameterList(RootModel[List[PolicyParameter]]):
    root: List[PolicyParameter]


class Qualification(BaseModel):
    GrantTime: Optional[Timestamp] = None
    IntegerValue: Optional[Integer] = None
    LocaleValue: Optional[Locale] = None
    QualificationTypeId: Optional[EntityId] = None
    Status: Optional[QualificationStatus] = None
    WorkerId: Optional[CustomerId] = None


class QualificationList(RootModel[List[Qualification]]):
    root: List[Qualification]


class QualificationRequest(BaseModel):
    Answer: Optional[String] = None
    QualificationRequestId: Optional[String] = None
    QualificationTypeId: Optional[EntityId] = None
    SubmitTime: Optional[Timestamp] = None
    Test: Optional[String] = None
    WorkerId: Optional[CustomerId] = None


class QualificationRequestList(RootModel[List[QualificationRequest]]):
    root: List[QualificationRequest]


class QualificationRequirement(BaseModel):
    ActionsGuarded: Optional[HITAccessActions] = None
    Comparator_1: Comparator = Field(..., alias='Comparator')
    IntegerValues: Optional[IntegerList] = None
    LocaleValues: Optional[LocaleList] = None
    QualificationTypeId: String
    RequiredToPreview: Optional[Boolean] = None


class QualificationRequirementList(RootModel[List[QualificationRequirement]]):
    root: List[QualificationRequirement]


class QualificationType(BaseModel):
    AnswerKey: Optional[String] = None
    AutoGranted: Optional[Boolean] = None
    AutoGrantedValue: Optional[Integer] = None
    CreationTime: Optional[Timestamp] = None
    Description: Optional[String] = None
    IsRequestable: Optional[Boolean] = None
    Keywords: Optional[String] = None
    Name: Optional[String] = None
    QualificationTypeId: Optional[EntityId] = None
    QualificationTypeStatus_1: Optional[QualificationTypeStatus] = Field(
        None, alias='QualificationTypeStatus'
    )
    RetryDelayInSeconds: Optional[Long] = None
    Test: Optional[String] = None
    TestDurationInSeconds: Optional[Long] = None


class QualificationTypeList(RootModel[List[QualificationType]]):
    root: List[QualificationType]


class RejectAssignmentRequest(BaseModel):
    AssignmentId: EntityId
    RequesterFeedback: String


class RejectQualificationRequestRequest(BaseModel):
    QualificationRequestId: String
    Reason: Optional[String] = None


class ReviewActionDetail(BaseModel):
    ActionId: Optional[EntityId] = None
    ActionName: Optional[String] = None
    CompleteTime: Optional[Timestamp] = None
    ErrorCode: Optional[String] = None
    Result: Optional[String] = None
    Status: Optional[ReviewActionStatus] = None
    TargetId: Optional[EntityId] = None
    TargetType: Optional[String] = None


class ReviewActionDetailList(RootModel[List[ReviewActionDetail]]):
    root: List[ReviewActionDetail]


class ReviewPolicy(BaseModel):
    Parameters: Optional[PolicyParameterList] = None
    PolicyName: String


class ReviewResultDetail(BaseModel):
    ActionId: Optional[EntityId] = None
    Key: Optional[String] = None
    QuestionId: Optional[EntityId] = None
    SubjectId: Optional[EntityId] = None
    SubjectType: Optional[String] = None
    Value: Optional[String] = None


class ReviewResultDetailList(RootModel[List[ReviewResultDetail]]):
    root: List[ReviewResultDetail]


class SendBonusRequest(BaseModel):
    AssignmentId: EntityId
    BonusAmount: CurrencyAmount
    Reason: String
    UniqueRequestToken: Optional[IdempotencyToken] = None
    WorkerId: CustomerId


class SendTestEventNotificationRequest(BaseModel):
    Notification: NotificationSpecification
    TestEventType: EventType


class UpdateNotificationSettingsRequest(BaseModel):
    Active: Optional[Boolean] = None
    HITTypeId: EntityId
    Notification: Optional[NotificationSpecification] = None


class UpdateQualificationTypeResponse(BaseModel):
    QualificationType_1: Optional[QualificationType] = Field(
        None, alias='QualificationType'
    )


class CreateHITRequest(BaseModel):
    AssignmentDurationInSeconds: Long
    AssignmentReviewPolicy: Optional[ReviewPolicy] = None
    AutoApprovalDelayInSeconds: Optional[Long] = None
    Description: String
    HITLayoutId: Optional[EntityId] = None
    HITLayoutParameters: Optional[HITLayoutParameterList] = None
    HITReviewPolicy: Optional[ReviewPolicy] = None
    Keywords: Optional[String] = None
    LifetimeInSeconds: Long
    MaxAssignments: Optional[Integer] = None
    QualificationRequirements: Optional[QualificationRequirementList] = None
    Question: Optional[String] = None
    RequesterAnnotation: Optional[String] = None
    Reward: CurrencyAmount
    Title: String
    UniqueRequestToken: Optional[IdempotencyToken] = None


class CreateHITTypeRequest(BaseModel):
    AssignmentDurationInSeconds: Long
    AutoApprovalDelayInSeconds: Optional[Long] = None
    Description: String
    Keywords: Optional[String] = None
    QualificationRequirements: Optional[QualificationRequirementList] = None
    Reward: CurrencyAmount
    Title: String


class CreateHITWithHITTypeRequest(BaseModel):
    AssignmentReviewPolicy: Optional[ReviewPolicy] = None
    HITLayoutId: Optional[EntityId] = None
    HITLayoutParameters: Optional[HITLayoutParameterList] = None
    HITReviewPolicy: Optional[ReviewPolicy] = None
    HITTypeId: EntityId
    LifetimeInSeconds: Long
    MaxAssignments: Optional[Integer] = None
    Question: Optional[String] = None
    RequesterAnnotation: Optional[String] = None
    UniqueRequestToken: Optional[IdempotencyToken] = None


class CreateQualificationTypeResponse(BaseModel):
    QualificationType_1: Optional[QualificationType] = Field(
        None, alias='QualificationType'
    )


class GetQualificationScoreResponse(BaseModel):
    Qualification_1: Optional[Qualification] = Field(None, alias='Qualification')


class GetQualificationTypeResponse(BaseModel):
    QualificationType_1: Optional[QualificationType] = Field(
        None, alias='QualificationType'
    )


class HIT(BaseModel):
    AssignmentDurationInSeconds: Optional[Long] = None
    AutoApprovalDelayInSeconds: Optional[Long] = None
    CreationTime: Optional[Timestamp] = None
    Description: Optional[String] = None
    Expiration: Optional[Timestamp] = None
    HITGroupId: Optional[EntityId] = None
    HITId: Optional[EntityId] = None
    HITLayoutId: Optional[EntityId] = None
    HITReviewStatus_1: Optional[HITReviewStatus] = Field(None, alias='HITReviewStatus')
    HITStatus_1: Optional[HITStatus] = Field(None, alias='HITStatus')
    HITTypeId: Optional[EntityId] = None
    Keywords: Optional[String] = None
    MaxAssignments: Optional[Integer] = None
    NumberOfAssignmentsAvailable: Optional[Integer] = None
    NumberOfAssignmentsCompleted: Optional[Integer] = None
    NumberOfAssignmentsPending: Optional[Integer] = None
    QualificationRequirements: Optional[QualificationRequirementList] = None
    Question: Optional[String] = None
    RequesterAnnotation: Optional[String] = None
    Reward: Optional[CurrencyAmount] = None
    Title: Optional[String] = None


class HITList(RootModel[List[HIT]]):
    root: List[HIT]


class ListHITsForQualificationTypeResponse(BaseModel):
    HITs: Optional[HITList] = None
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None


class ListHITsResponse(BaseModel):
    HITs: Optional[HITList] = None
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None


class ListQualificationRequestsResponse(BaseModel):
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None
    QualificationRequests: Optional[QualificationRequestList] = None


class ListQualificationTypesResponse(BaseModel):
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None
    QualificationTypes: Optional[QualificationTypeList] = None


class ListReviewableHITsResponse(BaseModel):
    HITs: Optional[HITList] = None
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None


class ListWorkersWithQualificationTypeResponse(BaseModel):
    NextToken: Optional[PaginationToken] = None
    NumResults: Optional[Integer] = None
    Qualifications: Optional[QualificationList] = None


class ReviewReport(BaseModel):
    ReviewActions: Optional[ReviewActionDetailList] = None
    ReviewResults: Optional[ReviewResultDetailList] = None


class CreateHITResponse(BaseModel):
    HIT_1: Optional[HIT] = Field(None, alias='HIT')


class CreateHITWithHITTypeResponse(BaseModel):
    HIT_1: Optional[HIT] = Field(None, alias='HIT')


class GetAssignmentResponse(BaseModel):
    Assignment_1: Optional[Assignment] = Field(None, alias='Assignment')
    HIT_1: Optional[HIT] = Field(None, alias='HIT')


class GetHITResponse(BaseModel):
    HIT_1: Optional[HIT] = Field(None, alias='HIT')


class ListReviewPolicyResultsForHITResponse(BaseModel):
    AssignmentReviewPolicy: Optional[ReviewPolicy] = None
    AssignmentReviewReport: Optional[ReviewReport] = None
    HITId: Optional[EntityId] = None
    HITReviewPolicy: Optional[ReviewPolicy] = None
    HITReviewReport: Optional[ReviewReport] = None
    NextToken: Optional[PaginationToken] = None
